services:
  db:
    container_name: $DB_HOSTNAME
    image: postgres:15.2-alpine
    ports:
      - $DB_PORT:$DB_PORT
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=$DB_NAME
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $DB_USER -d $DB_NAME" ]
      interval: 3s
      timeout: 5s
      retries: 10
  app-server:
    container_name: app-server
    image: arm64v8/eclipse-temurin:19
    entrypoint: [ "java", "-jar", "/app.jar" ]
    ports:
      - 8080:8080
    volumes:
      - ./app-server/target/app-server.jar:/app.jar
    healthcheck:
      test: [ "CMD-SHELL", "wget --quiet http://app-server:8080/health || exit 1" ]
      interval: 3s
      timeout: 5s
      retries: 10
  web-server:
    container_name: web-server
    image: nginx:1.23.3-alpine
    ports:
      - 8081:80
    volumes:
      - ./web-client/build:/etc/nginx/html
      - ./web-server/nginx.conf:/etc/nginx/nginx.conf
    healthcheck:
      test: [ "CMD-SHELL", "wget --quiet http://web-server:80/health || exit 1" ]
      interval: 3s
      timeout: 5s
      retries: 10
    depends_on:
      app-server:
        condition: service_healthy
